name: release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  goreleaser:
    runs-on: docker
    container:
      image: catthehacker/ubuntu:act-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.FORGEJO_PULL_TOKEN }}
          ref: ${{ github.ref }}
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'

      - name: Set up Go cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install GoReleaser
        shell: bash
        run: |
          set -euo pipefail
          echo "Installing GoReleaser via go install"
          go install github.com/goreleaser/goreleaser/v2@latest
          echo "GoReleaser version:"
          $(go env GOPATH)/bin/goreleaser --version

      - name: Build with GoReleaser (no publish)
        shell: bash
        env:
          GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
        run: |
          $(go env GOPATH)/bin/goreleaser release --clean --skip=announce,publish

      - name: Upload artifacts to Forgejo Package Registry (generic)
        shell: bash
        env:
          FORGEJO_URL: https://git.marcorealacci.me
          FORGEJO_OWNER: marcorealacci
          FORGEJO_TOKEN: ${{ secrets.FORGEJO_TOKEN }}
        run: |
          set -euo pipefail
          if [ -z "${FORGEJO_URL:-}" ] || [ -z "${FORGEJO_OWNER:-}" ] || [ -z "${FORGEJO_TOKEN:-}" ]; then
            echo "FORGEJO_URL, FORGEJO_OWNER, and FORGEJO_TOKEN must be set as repository secrets" >&2
            exit 1
          fi
          VERSION="${GITHUB_REF_NAME#v}"
          BASE_URL="${FORGEJO_URL%/}/api/packages/${FORGEJO_OWNER}/generic/conservation-daemon/${VERSION}"
          shopt -s nullglob
          files=(dist/*.deb dist/*.rpm dist/*.apk dist/*.pkg.tar.zst dist/*.tar.gz)
          if [ ${#files[@]} -eq 0 ]; then
            echo "No artifacts to upload under dist/" >&2
            exit 1
          fi
          for f in "${files[@]}"; do
            name=$(basename "$f")
            echo "Uploading $name"
            curl -fsSL -X PUT \
              -H "Authorization: token ${FORGEJO_TOKEN}" \
              -H "Content-Type: application/octet-stream" \
              --upload-file "$f" \
              "${BASE_URL}/${name}"
          done
